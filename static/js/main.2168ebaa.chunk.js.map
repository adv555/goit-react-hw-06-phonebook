{"version":3,"sources":["components/Section/Section.module.scss","components/Filter/Filter.module.scss","components/Header/Header.module.scss","components/ContactList/ContactList.module.css","redux/types.js","redux/reducer.js","redux/store.js","components/Header/Header.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","redux/actions.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","types","ADD","DELETE","CHANGE_FILTER","initialContacts","id","name","number","combineReducers","items","state","type","payload","existContact","some","alert","filter","rootReduser","contacts","contactsReducer","store","createStore","composeWithDevTools","Header","title","children","className","s","AppHeader","Section","Title","FormSection","connect","dispatch","onSubmit","shortid","generate","addContact","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","nameInputId","numberInputId","Form","preventDefault","console","log","Group","pattern","required","onChange","htmlFor","Btn","getFilterContacts","normalizedFilter","toLowerCase","includes","onDeleteContact","deleteContact","contactList","map","contactListItem","text","btn","onClick","target","FilterLabel","FilterInput","App","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2168ebaa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__CqcNT\",\"Title\":\"Section_Title__3JdV3\",\"FormSection\":\"Section_FormSection__26CAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterInput\":\"Filter_FilterInput__3kH4y\",\"FilterLabel\":\"Filter_FilterLabel__31TZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppHeader\":\"Header_AppHeader__1safz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contactListItem\":\"ContactList_contactListItem__1l6Fa\",\"text\":\"ContactList_text__2dM24\"};","const types = {\n  ADD: 'contacts/add',\n  DELETE: 'contacts/delete',\n  CHANGE_FILTER: 'contacts/filter',\n};\nexport default types;\n","import { combineReducers } from 'redux';\nimport types from 'redux/types';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = (state = initialContacts, { type, payload }) => {\n  switch (type) {\n    case types.ADD:\n      const existContact = state.some(({ name }) => name === payload.name);\n\n      return !existContact\n        ? [...state, payload]\n        : alert(`${payload.name} is already in the contact`);\n\n    case types.DELETE:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from 'redux/reducer';\n\n// const initialState = {\n//   contacts: {\n//     items: [],\n//     filter: '',\n//   },\n// };\n\nconst rootReduser = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReduser, composeWithDevTools());\n\nexport default store;\n","import PropTypes from 'prop-types';\nimport s from 'components/Header/Header.module.scss';\nfunction Header({ title, children }) {\n  return (\n    <header className={s.AppHeader}>\n      <div className=\"Container\">\n        <h1>{title}</h1>\n        {children}\n      </div>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport s from 'components/Section/Section.module.scss';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={`Container ${s.Section}`}>\n      <h2 className={s.Title}>{title}</h2>\n      <div className={s.FormSection}>{children}</div>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport s from 'components/ContactForm/ContactForm.module.scss';\nimport { addContact } from 'redux/actions';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    console.log(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  return (\n    <form className={s.Form} onSubmit={handleSubmit}>\n      <div className={s.Group}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          id={nameInputId}\n          onChange={handleChange}\n        />\n        <label htmlFor={nameInputId}>Name</label>\n        <div className=\"bar\"></div>\n      </div>\n\n      <div className={s.Group}>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          id={numberInputId}\n          onChange={handleChange}\n        />\n        <label htmlFor={numberInputId}>Number</label>\n        <div className=\"bar\"></div>\n      </div>\n      <button className={s.Btn} type=\"submit\">\n        add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import shortid from 'shortid';\nimport types from 'redux/types';\n\nconst addContact = (name, number) => ({\n  type: types.ADD,\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n});\n\nconst deleteContact = id => ({\n  type: types.DELETE,\n  payload: id,\n});\n\nconst changeFilter = value => ({\n  type: types.CHANGE_FILTER,\n  payload: value,\n});\n\nexport { addContact, deleteContact, changeFilter };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteContact } from 'redux/actions';\n\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li className={s.contactListItem} id={id} key={id}>\n            <p className={s.text}>{name}</p>\n            <p className={s.text}>{number}</p>\n            <button className={s.btn} type=\"button\" onClick={() => onDeleteContact(id)}>\n              delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nconst getFilterContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFilterContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter } from 'redux/actions';\nimport s from 'components/Filter/Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.FilterLabel} htmlFor=\"\">\n      Filter contacts by name\n      <input className={s.FilterInput} type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import 'styles/shared.scss';\nimport Header from 'components/Header';\nimport Section from 'components/Section';\nimport Form from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n// import { useLocalStorage } from 'hooks/useLocalStorage';\n\nexport default function App() {\n  // const [contacts, setContacts] = useLocalStorage('contacts', initialContacts);\n\n  return (\n    <div className=\"App\">\n      <Header title={'PhoneBook'}>\n        <Filter />\n      </Header>\n      <Section title={'Contacts'}>\n        <Form />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n\n// const [contacts, setContacts] = useState(\n//   JSON.parse(window.localStorage.getItem('contacts:')) ?? initialContacts,\n// );\n// const [filter, setFilter] = useState('');\n\n// useEffect(() => {\n//   window.localStorage.setItem('contacts:', JSON.stringify(contacts));\n// }, [contacts]);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\n\n// import { myAction, myAction2 } from 'redux/action';\n\nimport './index.css';\nimport App from './App';\n\nconsole.log(store.getState());\n// store.dispatch(myAction);\n// store.dispatch(myAction2(5));\n// store.dispatch(myAction2(15));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__pmdyI\",\"Btn\":\"ContactForm_Btn__3RNXk\",\"Group\":\"ContactForm_Group__2kBuf\"};"],"sourceRoot":""}